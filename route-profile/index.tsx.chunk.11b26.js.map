{"version":3,"sources":["webpack:///./routes/profile/index.tsx","webpack:///./routes/profile/style.css","webpack:///../src/index.js"],"names":["Profile","props","user","useState","Date","now","time","setTime","count","setCount","useEffect","timer","window","setInterval","clearInterval","class","style","toLocaleString","onClick","module","exports","getHookState","index","type","options","currentComponent","currentHook","hooks","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","some","component","forEach","invokeCleanup","invokeEffect","e","hook","_cleanup","oldArgs","newArgs","arg","f","prevRaf","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb"],"mappings":"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","file":"route-profile/index.tsx.chunk.11b26.js","sourcesContent":["import { FunctionalComponent, h } from \"preact\";\nimport { useEffect, useState } from \"preact/hooks\";\nimport * as style from \"./style.css\";\n\ninterface Props {\n    user: string;\n}\n\nconst Profile: FunctionalComponent<Props> = (props: Props) => {\n    const { user } = props;\n    const [time, setTime] = useState<number>(Date.now());\n    const [count, setCount] = useState<number>(0);\n\n    // gets called when this route is navigated to\n    useEffect(() => {\n        const timer = window.setInterval(() => setTime(Date.now()), 1000);\n\n        // gets called just before navigating away from the route\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    // update the current time\n    const increment = () => {\n        setCount(count + 1);\n    };\n\n    return (\n        <div class={style.profile}>\n            <h1>Profile: {user}</h1>\n            <p>This is the user profile for a user named {user}.</p>\n\n            <div>Current time: {new Date(time).toLocaleString()}</div>\n\n            <p>\n                <button onClick={increment}>Click Me</button> Clicked {count}{\" \"}\n                times.\n            </p>\n        </div>\n    );\n};\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__t2Dqz\"};","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\thook._cleanup = hook._value();\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"sourceRoot":""}