{"version":3,"sources":["webpack:///./routes/home/style.css","webpack:///./routes/home/index.tsx","webpack:///../src/index.js"],"names":["module","exports","Home","useState","list","setList","filter","setFilter","filteredList","setFilteredList","loading","setLoading","filterValue","setFilterValue","useEffect","mounted","fetch","then","res","json","data","prefixes","a","map","key","values","Array","from","Set","x","sort","reduce","memo","console","log","getAvailableFilter","filterFn","prefix","network_border_group","service","region","createFilterFn","updateFilter","field","ev","target","value","class","style","htmlFor","onChange","o","i","onClick","str","el","ip_prefix","join","document","createElement","body","appendChild","select","execCommand","removeChild","item","id","getHookState","index","type","options","currentComponent","currentHook","hooks","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","some","component","forEach","invokeCleanup","invokeEffect","e","hook","_cleanup","oldArgs","newArgs","arg","f","prevRaf","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","cb"],"mappings":"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","file":"route-home/index.tsx.chunk.a7220.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\",\"ipList\":\"ipList__drO0N\"};","import { FunctionalComponent, h } from 'preact'\nimport * as style from './style.css'\nimport { useEffect, useState } from 'preact/hooks'\n\ntype Prefix = {\n  ip_prefix: string\n  region: string\n  service: string\n  network_border_group: string\n}\n\ntype Filter = {\n  region?: string\n  service?: string\n  network_border_group?: string\n}\n\nconst createFilterFn: (p: Filter) => (x: Prefix) => boolean = filter => {\n  return (prefix: Prefix): boolean => {\n    return (\n      (!filter.network_border_group ||\n        prefix.network_border_group === filter.network_border_group) &&\n      (!filter.service || prefix.service === filter.service) &&\n      (!filter.region || prefix.region === filter.region)\n    )\n  }\n}\n\nconst getAvailableFilter = (list: Prefix[]): Record<string, string[]> => {\n  const fields = ['region', 'service', 'network_border_group'] as Array<\n    keyof Prefix\n  >\n\n  const a = fields\n    .map(key => {\n      const values = Array.from(new Set(list.map(x => x[key]))).sort()\n      return { key, values }\n    })\n    .reduce(\n      (memo, { key, values }) => ({\n        ...memo,\n        [key]: values\n      }),\n      {}\n    )\n\n  console.log(a)\n  return a\n}\n\nconst copyToClipboard = (str: string): void => {\n  const el = document.createElement('textarea')\n  el.value = str\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand('copy')\n  document.body.removeChild(el)\n}\n\nconst Home: FunctionalComponent = () => {\n  const [list, setList] = useState<Prefix[]>([])\n  const [filter, setFilter] = useState<Filter>({})\n  const [filteredList, setFilteredList] = useState<Prefix[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [filterValue, setFilterValue] = useState<Record<string, string[]>>({})\n\n  useEffect(() => {\n    setLoading(true)\n    let mounted = true\n    fetch('https://ip-ranges.amazonaws.com/ip-ranges.json')\n      .then(res => res.json())\n      .then((data: { prefixes: Prefix[] }) => {\n        if (!mounted) {\n          return\n        }\n\n        setList(data.prefixes)\n        setFilterValue(getAvailableFilter(data.prefixes))\n        setLoading(false)\n      })\n\n    return () => (mounted = false)\n  }, [])\n\n  useEffect(() => {\n    const filterFn = createFilterFn(filter)\n    setFilteredList(list.filter(filterFn))\n  }, [filter, list])\n\n  const updateFilter = (field: keyof Filter) => (ev: any): void => {\n    const target = ev.target as HTMLInputElement\n    setFilter(x => ({\n      ...x,\n      [field]: target.value\n    }))\n  }\n\n  const copyFiltered = (): void => {\n    copyToClipboard(filteredList.map(x => x.ip_prefix).join('\\n'))\n  }\n\n  return (\n    <div class={style.home}>\n      <h1>Home</h1>\n      <p>Filter the ip addresses</p>\n\n      <div>\n        <label htmlFor=\"\">network_border_group</label>\n        <select\n          value={filter.network_border_group || ''}\n          onChange={updateFilter('network_border_group')}\n        >\n          <option value={''}>Please select one</option>\n          {filterValue.network_border_group &&\n            filterValue.network_border_group.map((o, i) => (\n              <option value={o} key={i}>\n                {o}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"\">service</label>\n        <select value={filter.service || ''} onChange={updateFilter('service')}>\n          <option value={''}>Please select one</option>\n          {filterValue.service &&\n            filterValue.service.map((o, i) => (\n              <option value={o} key={i}>\n                {o}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"\">region</label>\n        <select value={filter.region || ''} onChange={updateFilter('region')}>\n          <option value={''}>Please select one</option>\n          {filterValue.region &&\n            filterValue.region.map((o, i) => (\n              <option value={o} key={i}>\n                {o}\n              </option>\n            ))}\n        </select>\n      </div>\n\n      <div>\n        <button onClick={copyFiltered}>Copy ip ranges</button>\n      </div>\n\n      {loading ? (\n        <span>Loading...</span>\n      ) : (\n        <div class={style.ipList}>\n          <ul>\n            {filteredList.map((item, id) => (\n              <li key={id}>\n                {item.ip_prefix} -{' '}\n                <em>\n                  {item.service} - {item.region} - {item.network_border_group}\n                </em>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\thook._cleanup = hook._value();\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"sourceRoot":""}